apiVersion: v1
kind: ServiceAccount
metadata:
  name: serviceaccount-demo
  namespace: demo
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: role-demo
  namespace: demo
rules:
  - apiGroups: [""] # hvem, «» = core API group
    resources: ["pods"] # hva, * = alle ressurser
    verbs: ["get", "watch", "list"] # hvordan, * = alle verb
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: rolebinding-demo
  namespace: demo
subjects:
  - kind: ServiceAccount # User / Group / ServiceAccount
    name: serviceaccount-demo
    namespace: demo
    apiGroup: "" # default for ServiceAccount objekter
roleRef:
  kind: Role
  name: role-demo
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: rbac-test
  namespace: demo
data:
  tst.sh: |
    #!/bin/sh

    while true
    do
      echo "get pods: "
      curl -s -o /dev/null -w "%{http_code}" \
        http://192.168.3.25:6443/apis/v1/namespaces/demo/pods
      echo "\\n"
      echo depl: "
      curl -s -o /dev/null -w "%{http_code}" \
        http://192.168.3.25:6443/apis/v1/namespaces/demo/deployments
      sleep 10
    done
---
apiVersion: v1
kind: Pod
metadata:
  name: pod-rbac-demo
  namespace: demo
spec:
  serviceAccountName: serviceaccount-demo
  containers:
    - image: curlimages/curl
      name: curl
      command: ["/bin/sh", "-c", "while true; do sh /ex/tst.sh; sleep 10; done"]
      volumeMounts:
        - mountPath: /ex
          name: run-script
  volumes:
    - name: run-script
      configMap:
        name: rbac-test
